# Reasonably sensible defaults
CFLAGS	= -Wall -g -Og -fopenmp -std=c++14   -fdiagnostics-color=auto -I`pwd` -DOPENMP -DDOUBLEPRECISION -DOUTPUT_IN_DOUBLEPRECISION
CPATH 	= /opt/local/include/
LPATH   = /opt/local/lib

GSLFLAGS = -lgsl -lgslcblas

# Use -DFFTW3 to use FFTW3 (instead of FFTW 2).
#
#
# Additionally use -DFFTW3_THREADS=n to use threads. This will use n threads
# UNLESS you are compiling with openmp, in which case you do not need to set n
# as it will automatically be set to omp_get_num_threads()
#
# Note you have to link to fftw3 and fftw3_threads (or fftw3_omp)
# if you are using threads

FFTW = -DFFTW3 -DFFTW_THREADS
FFTWLIB = -lfftw3 -lfftw3_threads

# Example for FFTW2:

#FFTW    = -DFFTW_TYPE_PREFIX=1
#FFTWLIB = -ldfftw -ldrfftw


# If you want to use HDF5, something like the following is necessary.
#
#HDF5_FLAGS = -lhdf5 -D H5_USE_16_API -DHAVE_HDF5
#
# WARNING - HDF5 has not been tested recently and in particular won't work
# with zoom simulations as the code does not support varying mass particles




# Some customizations for known systems

HOST	= $(shell if [ `which scutil 2>/dev/null` ]; then scutil --get ComputerName | cut -c1-5; else hostname | cut -c1-5 ; fi )
GIT_VERSION = $(shell git rev-parse --short HEAD)
GIT_MODIFIED = $(shell git ls-files -m | tr "\n" " ")
GIT_VARIABLES = -DGIT_VERSION='"$(GIT_VERSION)"' -DGIT_MODIFIED='"$(GIT_MODIFIED)"'
HOST3	= $(shell hostname | cut -c1-3)

ifeq ($(HOST3), pfe)
	CXX = /nasa/pkgsrc/2016Q2/gcc5/bin/g++
	CPATH = /u/apontzen/genetIC/genetIC:/nasa/gsl/1.14/include/:/nasa/intel/Compiler/2016.2.181/compilers_and_libraries_2016.2.181/linux/mkl/include/fftw
	LPATH =  /nasa/gsl/1.14/lib/ -L/nasa/intel/Compiler/2016.2.181/compilers_and_libraries_2016.2.181/linux/mkl/lib/intel64/
	CFLAGS = -Wall -g -O3 -fopenmp -std=c++14 -fdiagnostics-color=auto -I`pwd` -DOPENMP -DDOUBLEPRECISION 
	FFTWLIB = -ldl -lpthread -lm -lstdc++ -lgfortran -lmkl_intel_ilp64 -lmkl_gnu_thread -lmkl_core
	FFTW = -DFFTW3 -DFFTW_THREADS
	GSLFLAGS = /nasa/gsl/1.14/lib/libgsl.a /nasa/gsl/1.14/lib/libgslcblas.a
endif

ifeq ($(HOST), Snowd)
	CPATH = /sw/include/
	LPATH = /sw/lib/
	CXX = /opt/local/bin/g++-mp-6 -L/opt/local/lib/
endif

ifeq ($(HOST), Rhodo)
	CXX = /usr/local/bin/g++ -lstdc++ -fopenmp -O3 -g -L/usr/local/lib/
endif

ifeq ($(HOST), dirac)
	CXX	= g++
	CFLAGS  += -m64 -I${FFTWINCLUDE} -I${GSL_INC_DIR}
        FFTW    = -DFFTW3
        FFTWLIB = -lgomp -lpthread -lm -ldl -lfftw3 -L${FFTWDIR} -L${GSL_LIB_DIR}
endif

ifeq ($(HOST), chewb)
	CXX      = /usr/local/bin/g++
	FFTW    = -DFFTW_TYPE_PREFIX=1
	FFTWLIB = -ldfftw -ldrfftw
endif

ifeq ($(HOST), imac7)
	CXX      = /opt/local/bin/g++-mp-6
	CFLAGS  += -Wextra -Werror -Wfatal-errors
	FFTW    = -DFFTW3 -DFFTW_THREADS
	FFTWLIB = -lfftw3 -lfftw3_threads
endif

ifeq ($(HOST), marti)
	CXX      = /opt/local/bin/g++-mp-6
	CFLAGS  += -Wextra -Werror -Wfatal-errors
	FFTW    = -DFFTW3 -DFFTW_THREADS
	FFTWLIB = -lfftw3 -lfftw3_threads
endif

ifeq ($(HOST3), hyp)
        CXX = g++
        CPATH = /share/apps/fftw-3.3.5/include/:/share/apps/gsl-2.4/include
        LPATH = /share/apps/gsl-2.4/lib
        LD_LIBRARY_PATH = /share/apps/gsl-2.4/lib:/share/apps/fftw-3.3.5/lib:
        CFLAGS += -Wextra -Werror -Wfatal-errors
endif

all: IC

%.o: %.cpp ; $(CXX) $(CFLAGS) $(GIT_VARIABLES) -I$(CPATH) $(FFTW) -c $< -o $@

IC: src/main.o src/tools/filesystem.o src/tools/progress/progress.o
		$(CXX) $(CFLAGS) -o IC $(GIT_VARIABLES) -I$(CPATH) $(FFTW) src/main.o src/tools/filesystem.o src/tools/progress/progress.o -L$(LPATH) $(GSLFLAGS) -lm $(FFTWLIB)  $(HDF5_FLAGS)

clean:
	rm -rf IC
	rm -rf src/*.o
